<!-- Pagination -->

<form action="<%= pagination.originalURL -%>" method="GET">
  <%if(pagination.hasPrevPage){%><a href="<%= pagination.previousPageURL %>">Previous</a> |<%}%>
  <%if(pagination.hasNextPage){%><a href="<%= pagination.nextPageURL %>">Next</a> | <%}%>
  Page: <%=paginationResult.currentPage %> |
  Total: <%=paginationResult.totalPages %> |
  <label for="limit">Limit:</label>
  <select name="limit" id="limit" onchange="Widgets_Pagination.setLimit()">
    <option value="0" selected>0</option>
    <% for (let i = 5; i< 25; i+= 5){ %>
    <option value="<%=i-%>" <%if(pagination.limit == i){ %>selected<%}%>><%=i-%></option>
    <% } %>
  </select>
  <label for="search">Search:</label>
  <input type="text" id="search" name="search" required /><label for="type"> In:</label>
  <select id="type" name="type">
    <option value="title">Title</option>
    <option value="content">Content</option>
    <option value="labels">Labels</option>
  </select>
  <button>Submit</button>
</form>

<script>
  const Widgets_Pagination = {
    setLimit() {
      var selectElement = document.getElementById("limit");
      var selectedValue = selectElement.value;

      const currentUrl = new URL(window.location.href);
      const newURL = new URL(window.location.href);

      newURL.searchParams.set("page", <%=paginationResult.currentPage%>);
      // newURL.searchParams.set("page", 0); // reset page
      newURL.searchParams.set("limit", selectedValue);
      // If you want to transfer existing parameters from the current URL
      currentUrl.searchParams.forEach((value, key) => {
        if (!key) newURL.searchParams.append(key, value);
        console.log("KEY:" + key + " V:" + value);
        //   console.log(newURL.toString())
      });
      window.location.href = newURL.toString();
    },
  }

  // const searchForm = document.getElementById('searchForm');
  // searchForm.addEventListener('submit', (event) => {
  //   event.preventDefault(); // Prevent default form submission

  //   // const searchTerm = searchInput.value;

  //   // try {
  //   //   const response = await getPosts({
  //   //     page: 0,
  //   //     limit: 5
  //   //   })
  //   //   if (!response.success) {
  //   //     throw Error('error')
  //   //     return
  //   //   }
  //   //   const posts = response.responseObject.data
  //   // } catch (err) {
  //   //   console.error('Error fetching data: ', error)
  //   // }

  // });
</script>